name: Light Client
on:
  pull_request:
    paths:
      - light-client/**
      - .github/workflows/light-client.yaml
  push:
    tags:
      - v[0-9]+.*
    branches:
      - "release/*"
      - main

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: ${{ !startsWith(github.ref, 'refs/tags/') && github.ref != 'refs/heads/main' }}

env:
  CARGO_INCREMENTAL: 0
  CARGO_PROFILE_DEV_DEBUG: 1
  CARGO_PROFILE_RELEASE_DEBUG: 1
  CARGO_NET_RETRY: 10
  RUSTUP_MAX_RETRIES: 10

jobs:
  build-cw-contract:
    name: Build CosmWasm Light Client Contract
    runs-on: ubuntu-latest
    timeout-minutes: 60
    steps:
      - uses: actions/checkout@v5
      - uses: cachix/install-nix-action@v30
        with:
          extra_nix_config: |
            experimental-features = nix-command flakes
      - uses: cachix/cachix-action@v15
        with:
          name: ibc-starknet
          extraPullNames: hermes-sdk,cosmos-nix
          authToken: ${{ secrets.CACHIX_AUTH_TOKEN }}

      - uses: Swatinem/rust-cache@v2
        with:
          cache-on-failure: true
          workspaces: |
            light-client
          
      # Pin Rust before installing cosmwasm-check
      - uses: dtolnay/rust-toolchain@v1
        with:
          toolchain: 1.82.0

      - uses: taiki-e/cache-cargo-install-action@v2
        with:
          tool: cosmwasm-check@3.0.1

      - name: Build CosmWasm light client contract
        working-directory: ./light-client
        run: |
          nix shell ..#rust-wasm -c \
            cargo build -p ibc-client-starknet-cw --target wasm32-unknown-unknown --release
          cosmwasm-check target/wasm32-unknown-unknown/release/ibc_client_starknet_cw.wasm

  starknet-storage-verifier-tests:
    name: Run Starknet Storage Verifier tests
    runs-on: ubuntu-latest
    timeout-minutes: 60
    steps:
      - uses: actions/checkout@v5

      - uses: Swatinem/rust-cache@v2
        with:
          cache-on-failure: true
          workspaces: |
            light-client

      - name: Install cargo-nextest
        uses: taiki-e/install-action@cargo-nextest

      - name: Run tests
        working-directory: ./light-client
        run: |
          cargo nextest run --all-features --success-output=final

  lint-light-client:
    name: Lint CosmWasm Light Client Contract
    runs-on: ubuntu-latest
    timeout-minutes: 60
    steps:
      - uses: actions/checkout@v5
      - uses: cachix/install-nix-action@v30
        with:
          extra_nix_config: |
            experimental-features = nix-command flakes
      - uses: cachix/cachix-action@v15
        with:
          name: ibc-starknet
          extraPullNames: hermes-sdk,cosmos-nix
          authToken: ${{ secrets.CACHIX_AUTH_TOKEN }}
      - uses: Swatinem/rust-cache@v2
        with:
          cache-on-failure: true
          workspaces: |
            light-client

      - name: Run Clippy
        working-directory: ./light-client
        run: |
          nix shell ..#rust -c \
            cargo clippy --all-targets --all-features -- -D warnings

          nix shell ..#rust -c \
            cargo clippy --all-targets --no-default-features -- -D warnings
