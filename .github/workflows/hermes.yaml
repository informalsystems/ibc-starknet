name: Hermes Relayer
on:
  pull_request: {}
  push:
    branches: main

# Cancel previous runs of this workflow when a new commit is added to the PR, branch or tag
concurrency:
  group: ${{ github.workflow }}-${{ github.event.pull_request.number || github.ref }}
  cancel-in-progress: true

jobs:
  starknet-integration-tests:
    name: Run Starknet Integration Tests
    strategy:
      fail-fast: false
      matrix:
        value:
          - os: ubuntu-22.04
            osmosis: osmosisd-28.0.1-linux-amd64.tar.gz
            starknet-devnet: starknet-devnet-x86_64-unknown-linux-gnu.tar.gz
          - os: ubuntu-22.04-arm
            osmosis: osmosisd-28.0.1-linux-arm64.tar.gz
            starknet-devnet: starknet-devnet-aarch64-unknown-linux-gnu.tar.gz
          - os: macos-14
            osmosis: osmosisd-28.0.1-darwin-arm64.tar.gz
            starknet-devnet: starknet-devnet-aarch64-apple-darwin.tar.gz
    runs-on: ${{ matrix.value.os }}
    timeout-minutes: 60
    steps:
      - uses: actions/checkout@v4

      - uses: cachix/install-nix-action@v30
        with:
          extra_nix_config: |
            experimental-features = nix-command flakes

      - uses: cachix/cachix-action@v15
        with:
          name: ibc-starknet
          extraPullNames: hermes-sdk,cosmos-nix
          authToken: ${{ secrets.CACHIX_AUTH_TOKEN }}

      - name: Install Rust toolchain
        uses: actions-rust-lang/setup-rust-toolchain@v1
        with:
          toolchain: 1.81,stable
          target: wasm32-unknown-unknown
          cache-workspaces: |
            relayer -> target
            light-client -> target

      - name: Install osmosisd v28.0.1
        uses: robinraju/release-downloader@v1
        with:
          repository: osmosis-labs/osmosis
          fileName: ${{ matrix.value.osmosis }}
          tag: v28.0.1
          extract: true

      - name: Install starknet-devnet
        uses: robinraju/release-downloader@v1
        with:
          repository: 0xSpaceShard/starknet-devnet
          fileName: ${{ matrix.value.starknet-devnet }}
          tag: v0.2.4
          extract: true

      - uses: taiki-e/install-action@v2
        with:
          tool: cargo-nextest

      - uses: taiki-e/cache-cargo-install-action@v2
        with:
          tool: cosmwasm-check

      - run: echo "$PWD" >> $GITHUB_PATH

      - run: |
          osmosisd version
          starknet-devnet --version
          cosmwasm-check --version

      - name: Install Scarb
        uses: software-mansion/setup-scarb@v1
        with:
          tool-versions: cairo-contracts/.tool-versions
          scarb-lock: cairo-contracts/Scarb.lock

      - name: Install Universal Sierra Compiler
        uses: software-mansion/setup-universal-sierra-compiler@v1
        with:
          tool-versions: cairo-contracts/.tool-versions

      - name: Install Starknet Foundry
        uses: foundry-rs/setup-snfoundry@v3
        with:
          tool-versions: cairo-contracts/.tool-versions

      - name: Build Cairo contracts
        working-directory: ./cairo-contracts
        run: |
          scarb build -p starknet_ibc_contracts

      - name: Build CW light client contract
        working-directory: ./light-client
        run: |
          cargo +1.81 build -p ibc-client-starknet-cw --target wasm32-unknown-unknown --release
          cosmwasm-check target/wasm32-unknown-unknown/release/ibc_client_starknet_cw.wasm

      - name: Run Integration Tests
        env:
          RUST_BACKTRACE: 1
          RUST_LOG: debug
        working-directory: ./relayer
        # Tests are run with a single thread to avoid Connection refused (os error 61) with macOS
        run: |
          export ERC20_CONTRACT="$(pwd)/../cairo-contracts/target/dev/starknet_ibc_contracts_ERC20Mintable.contract_class.json"
          export ICS20_CONTRACT="$(pwd)/../cairo-contracts/target/dev/starknet_ibc_contracts_TransferApp.contract_class.json"
          export COMET_CLIENT_CONTRACT="$(pwd)/../cairo-contracts/target/dev/starknet_ibc_contracts_CometClient.contract_class.json"
          export STARKNET_WASM_CLIENT_PATH="$(pwd)/../light-client/target/wasm32-unknown-unknown/release/ibc_client_starknet_cw.wasm"
          export IBC_CORE_CONTRACT="$(pwd)/../cairo-contracts/target/dev/starknet_ibc_contracts_IBCCore.contract_class.json"

          nix shell github:informalsystems/cosmos.nix#ibc-go-v8-wasm-simapp -c cargo nextest run

      - name: Setup tmate session
        if: ${{ failure() }}
        uses: mxschmitt/action-tmate@v3
  lint-relayer:
    name: Lint Relayer Code
    runs-on: ubuntu-latest
    timeout-minutes: 20
    steps:
      - uses: actions/checkout@v4

      - uses: cachix/install-nix-action@v30
        with:
          extra_nix_config: |
            experimental-features = nix-command flakes

      - uses: cachix/cachix-action@v15
        with:
          name: ibc-starknet
          extraPullNames: hermes-sdk,cosmos-nix
          authToken: ${{ secrets.CACHIX_AUTH_TOKEN }}

      - uses: Swatinem/rust-cache@v2
        with:
          workspaces: |
            relayer -> relayer/target

      - name: Run Clippy
        working-directory: ./relayer
        run: |
          nix shell ..#rust -c \
            cargo clippy --all-targets --all-features -- -D warnings
