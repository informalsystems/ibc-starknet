name: Hermes Relayer
on:
  pull_request: {}
  push:
    branches: main

# Cancel previous runs of this workflow when a new commit is added to the PR, branch or tag
concurrency:
  group: ${{ github.workflow }}-${{ github.event.pull_request.number || github.ref }}
  cancel-in-progress: true

jobs:
  starknet-integration-tests:
    name: Run Starknet Integration Tests
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-22.04, ubuntu-22.04-arm, macos-14]
    runs-on: ${{ matrix.os }}
    timeout-minutes: 60
    steps:
      - uses: actions/checkout@v4

      - uses: cachix/install-nix-action@v30
        with:
          extra_nix_config: |
            experimental-features = nix-command flakes

      - uses: cachix/cachix-action@v15
        with:
          name: ibc-starknet
          extraPullNames: hermes-sdk,cosmos-nix
          authToken: ${{ secrets.CACHIX_AUTH_TOKEN }}

      - name: Install Scarb
        uses: software-mansion/setup-scarb@v1
        with:
          tool-versions: cairo-contracts/.tool-versions
          scarb-lock: cairo-contracts/Scarb.lock

      - uses: Swatinem/rust-cache@v2
        with:
          workspaces: |
            relayer
            light-client

      - name: Build Cairo contracts
        working-directory: ./cairo-contracts
        run: |
          scarb build -p starknet_ibc_contracts

      - name: Run Integration Tests
        # disable macos runner on PRs
        if: ${{ matrix.os != 'macos-14' || github.event_name != 'pull_request' }}
        env:
          RUST_BACKTRACE: 1
          RUST_LOG: debug
          # Tests are run with a single thread to avoid Connection refused (os error 61) with macOS
          TEST_THREADS: ${{ matrix.os == 'macos-14' && 1 || 4 }}
        working-directory: ./relayer
        run: |
          export ERC20_CONTRACT="$(pwd)/../cairo-contracts/target/dev/starknet_ibc_contracts_ERC20Mintable.contract_class.json"
          export ICS20_CONTRACT="$(pwd)/../cairo-contracts/target/dev/starknet_ibc_contracts_TransferApp.contract_class.json"
          export COMET_CLIENT_CONTRACT="$(pwd)/../cairo-contracts/target/dev/starknet_ibc_contracts_CometClient.contract_class.json"
          export IBC_CORE_CONTRACT="$(pwd)/../cairo-contracts/target/dev/starknet_ibc_contracts_IBCCore.contract_class.json"

          export STARKNET_WASM_CLIENT_PATH="$(nix build ..#ibc-starknet-cw --print-out-paths)/ibc_client_starknet_cw.wasm"

          nix shell \
            ..#osmosis \
            ..#wasm-simapp \
            ..#starknet-devnet \
            ..#rust \
            ..#cargo-nextest \
            -c \
            cargo nextest run --release \
            --test-threads=$TEST_THREADS

  lint-relayer:
    name: Lint Relayer Code
    runs-on: ubuntu-latest
    timeout-minutes: 20
    steps:
      - uses: actions/checkout@v4

      - uses: cachix/install-nix-action@v30
        with:
          extra_nix_config: |
            experimental-features = nix-command flakes

      - uses: cachix/cachix-action@v15
        with:
          name: ibc-starknet
          extraPullNames: hermes-sdk,cosmos-nix
          authToken: ${{ secrets.CACHIX_AUTH_TOKEN }}

      - uses: Swatinem/rust-cache@v2
        with:
          workspaces: |
            relayer

      - name: Run Clippy
        working-directory: ./relayer
        run: |
          nix shell ..#rust -c \
            cargo clippy --all-targets --all-features -- -D warnings
