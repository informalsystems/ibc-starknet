use ics23::{CommitmentProof, array_u8_to_byte_array};
use protobuf::types::message::ProtoCodecImpl;

#[test]
fn test_commitment_decode() {
    let proof: Array<u8> = array![
        10,
        180,
        2,
        10,
        177,
        2,
        10,
        24,
        99,
        111,
        110,
        110,
        101,
        99,
        116,
        105,
        111,
        110,
        115,
        47,
        99,
        111,
        110,
        110,
        101,
        99,
        116,
        105,
        111,
        110,
        45,
        48,
        18,
        90,
        10,
        9,
        48,
        56,
        45,
        119,
        97,
        115,
        109,
        45,
        48,
        18,
        35,
        10,
        1,
        49,
        18,
        13,
        79,
        82,
        68,
        69,
        82,
        95,
        79,
        82,
        68,
        69,
        82,
        69,
        68,
        18,
        15,
        79,
        82,
        68,
        69,
        82,
        95,
        85,
        78,
        79,
        82,
        68,
        69,
        82,
        69,
        68,
        24,
        2,
        34,
        38,
        10,
        15,
        48,
        55,
        45,
        116,
        101,
        110,
        100,
        101,
        114,
        109,
        105,
        110,
        116,
        45,
        48,
        18,
        12,
        99,
        111,
        110,
        110,
        101,
        99,
        116,
        105,
        111,
        110,
        45,
        48,
        26,
        5,
        10,
        3,
        105,
        98,
        99,
        26,
        11,
        8,
        1,
        24,
        1,
        32,
        1,
        42,
        3,
        0,
        2,
        46,
        34,
        41,
        8,
        1,
        18,
        37,
        2,
        4,
        46,
        32,
        103,
        183,
        108,
        123,
        130,
        214,
        14,
        190,
        231,
        244,
        29,
        209,
        26,
        2,
        83,
        76,
        26,
        22,
        239,
        167,
        12,
        33,
        115,
        16,
        53,
        98,
        48,
        223,
        213,
        173,
        12,
        32,
        32,
        34,
        41,
        8,
        1,
        18,
        37,
        4,
        6,
        46,
        32,
        115,
        228,
        170,
        176,
        99,
        88,
        214,
        238,
        104,
        211,
        22,
        134,
        196,
        183,
        213,
        52,
        211,
        224,
        227,
        207,
        163,
        120,
        106,
        167,
        161,
        255,
        166,
        121,
        50,
        235,
        77,
        245,
        32,
        34,
        43,
        8,
        1,
        18,
        4,
        6,
        14,
        46,
        32,
        26,
        33,
        32,
        124,
        169,
        233,
        205,
        245,
        0,
        82,
        237,
        24,
        14,
        214,
        193,
        249,
        20,
        143,
        122,
        107,
        210,
        130,
        74,
        150,
        247,
        170,
        183,
        63,
        155,
        117,
        246,
        214,
        193,
        148,
        151,
        34,
        41,
        8,
        1,
        18,
        37,
        10,
        38,
        46,
        32,
        234,
        13,
        6,
        80,
        107,
        150,
        106,
        223,
        234,
        105,
        103,
        66,
        88,
        227,
        73,
        25,
        11,
        179,
        135,
        211,
        219,
        136,
        132,
        116,
        19,
        15,
        87,
        96,
        12,
        100,
        245,
        250,
        32,
        10,
        167,
        2,
        10,
        164,
        2,
        10,
        3,
        105,
        98,
        99,
        18,
        32,
        96,
        2,
        250,
        3,
        143,
        61,
        16,
        174,
        132,
        183,
        247,
        116,
        96,
        207,
        177,
        241,
        236,
        65,
        250,
        164,
        240,
        238,
        196,
        249,
        237,
        100,
        133,
        67,
        194,
        149,
        146,
        190,
        26,
        9,
        8,
        1,
        24,
        1,
        32,
        1,
        42,
        1,
        0,
        34,
        37,
        8,
        1,
        18,
        33,
        1,
        78,
        29,
        92,
        86,
        59,
        13,
        176,
        255,
        220,
        186,
        111,
        201,
        125,
        192,
        199,
        177,
        59,
        91,
        92,
        156,
        52,
        19,
        87,
        240,
        136,
        39,
        86,
        80,
        71,
        214,
        198,
        185,
        34,
        39,
        8,
        1,
        18,
        1,
        1,
        26,
        32,
        16,
        43,
        226,
        80,
        158,
        2,
        200,
        133,
        199,
        73,
        61,
        110,
        15,
        162,
        121,
        43,
        8,
        222,
        107,
        204,
        113,
        87,
        112,
        127,
        57,
        243,
        145,
        99,
        246,
        230,
        142,
        253,
        34,
        39,
        8,
        1,
        18,
        1,
        1,
        26,
        32,
        130,
        76,
        240,
        0,
        5,
        140,
        189,
        39,
        186,
        172,
        69,
        106,
        251,
        34,
        190,
        12,
        16,
        24,
        114,
        62,
        217,
        153,
        0,
        119,
        84,
        197,
        71,
        45,
        252,
        187,
        4,
        23,
        34,
        39,
        8,
        1,
        18,
        1,
        1,
        26,
        32,
        156,
        210,
        174,
        62,
        186,
        38,
        47,
        183,
        212,
        204,
        250,
        83,
        46,
        223,
        9,
        39,
        127,
        9,
        76,
        6,
        132,
        52,
        20,
        89,
        23,
        93,
        164,
        194,
        254,
        16,
        165,
        81,
        34,
        37,
        8,
        1,
        18,
        33,
        1,
        118,
        206,
        41,
        14,
        188,
        227,
        197,
        216,
        6,
        199,
        112,
        173,
        228,
        208,
        168,
        123,
        199,
        184,
        223,
        148,
        203,
        109,
        149,
        37,
        2,
        18,
        192,
        191,
        6,
        17,
        19,
        200,
        34,
        39,
        8,
        1,
        18,
        1,
        1,
        26,
        32,
        180,
        165,
        124,
        40,
        174,
        123,
        121,
        90,
        64,
        198,
        11,
        147,
        199,
        151,
        209,
        216,
        178,
        47,
        109,
        111,
        10,
        240,
        101,
        212,
        194,
        186,
        183,
        100,
        23,
        62,
        42,
        201,
    ];
    let byte_array_proof = array_u8_to_byte_array(@proof);
    let maybe_decoded_proof: Option<CommitmentProof> = ProtoCodecImpl::decode::<
        CommitmentProof,
    >(@byte_array_proof);
    assert(maybe_decoded_proof.is_some(), 'expected proof to be non zero');
}
